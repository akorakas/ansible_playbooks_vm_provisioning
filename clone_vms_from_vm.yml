- name: Clone a VM on vSphere with Static IP Configuration
  hosts: localhost
  gather_facts: no
  vars:
    vsphere_user: "watson@vsphere.local"
    vsphere_password: "$E:uu2j9YB@t6h|&4FWH"
    vsphere_server: "vcenter.gcloud.gsis.gr"

    datacenter: "gcloud.gsis.gr"
    datastore: "ADM02-DATA"
    resource_pool: "/gcloud.gsis.gr/host/G-Cloud Next Gen//Resources"
    network: "VLAN 3301 - 10.101.32.0%2f28"
    source_vm: "NG-RH"
    vm_folder: "/Efka"

    vm_name: "PRODWEBINTVM1"
    vm_cpu: 8
    vm_memory: 64
    vm_disk_size: 50

    vm_domain: "gcloud.gsis.gr"
    vm_dns_list: ["10.9.209.69", "10.9.209.70"]

    ip: "10.101.32.34"
    netmask: "255.255.255.240"
    gateway: "10.101.32.33"

  tasks:
    - name: Clone the VM
      community.vmware.vmware_guest:
        hostname: "{{ vsphere_server }}"
        username: "{{ vsphere_user }}"
        password: "{{ vsphere_password }}"
        validate_certs: no
        datacenter: "{{ datacenter }}"
        cluster: "G-Cloud Next Gen"
        resource_pool: "{{ resource_pool }}"
        folder: "{{ vm_folder }}"
        name: "{{ vm_name }}"
        template: "{{ source_vm }}"
        state: poweredon
        hardware:
          memory_mb: "{{ vm_memory | int * 1024 }}"
          num_cpus: "{{ vm_cpu }}"
        disk:
          - size_gb: "{{ vm_disk_size }}"
            datastore: "{{ datastore }}"
        networks:
          - name: "{{ network }}"
            start_connected: true
        wait_for_ip_address: yes
      register: deploy_vm

    - name: Configure Static IP and DNS
      community.vmware.vmware_guest_customization:
        hostname: "{{ vsphere_server }}"
        username: "{{ vsphere_user }}"
        password: "{{ vsphere_password }}"
        validate_certs: no
        vm_id: "{{ vm_name }}"
        customization:
          hostname: "{{ vm_name }}"
          domain: "{{ vm_domain }}"
          dns_servers: "{{ vm_dns_list }}"
          nic_setting_map:
            - adapter:
                ip: "{{ ip }}"
                subnet_mask: "{{ netmask }}"
                gateway: "{{ gateway }}"
      when: deploy_vm is succeeded
    
